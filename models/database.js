-- Disable foreign key checks to allow dropping tables with circular dependencies
SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS THRESHOLD_SETTINGS;
DROP TABLE IF EXISTS NOTIFICATIONS;
DROP TABLE IF EXISTS STOCK_LOGS;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS INVENTORY_ASSIGNMENTS;
DROP TABLE IF EXISTS INVENTORY;
DROP TABLE IF EXISTS INVITATIONS;
DROP TABLE IF EXISTS TEAM_MEMBERS;
DROP TABLE IF EXISTS TEAMS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS ROLES;

-- Re-enable foreign key checks for the rest of the script
SET FOREIGN_KEY_CHECKS = 1;

-- 1. ROLES TABLE
CREATE TABLE ROLES (
    role_id INT PRIMARY KEY AUTO_INCREMENT,
    role_name VARCHAR(50) UNIQUE NOT NULL,
    permissions JSON
);

-- 2. USERS TABLE
CREATE TABLE USERS (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    team_id INT,
    status ENUM('active', 'inactive') NOT NULL DEFAULT 'active',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (role_id) REFERENCES ROLES(role_id)
);

-- 3. TEAMS TABLE
CREATE TABLE TEAMS (
    team_id INT PRIMARY KEY AUTO_INCREMENT,
    team_name VARCHAR(255) NOT NULL,
    owner_id INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES USERS(user_id)
);

-- Add the foreign key from USERS to TEAMS
ALTER TABLE USERS ADD CONSTRAINT fk_user_team FOREIGN KEY (team_id) REFERENCES TEAMS(team_id);

-- 4. TEAM_MEMBERS TABLE
CREATE TABLE TEAM_MEMBERS (
    id INT PRIMARY KEY AUTO_INCREMENT,
    team_id INT NOT NULL,
    user_id INT NOT NULL,
    role_id INT NOT NULL,
    joined_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (team_id) REFERENCES TEAMS(team_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES ROLES(role_id),
    UNIQUE(team_id, user_id)
);

-- (Other tables: INVENTORY, PRODUCTS, etc. go here)

-- 11. INVITATIONS TABLE
CREATE TABLE INVITATIONS (
    invitation_id INT PRIMARY KEY AUTO_INCREMENT,
    team_id INT NOT NULL,
    invited_email VARCHAR(255) NOT NULL,
    token VARCHAR(255) UNIQUE NOT NULL,
    status ENUM('pending', 'accepted') NOT NULL DEFAULT 'pending',
    expires_at DATETIME NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (team_id) REFERENCES TEAMS(team_id) ON DELETE CASCADE
);